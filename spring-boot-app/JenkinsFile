pipeline {
    agent { label 'built-in' }
    
    environment {
        // Define SonarQube URL and other necessary environment variables
        SONAR_URL = "http://18.208.106.59:9000"
        GIT_REPO_NAME = "jenkins-cicd-argo-k8"  // Set your repository name
        GIT_USER_NAME = "Nalla06"  // Set your GitHub username
    }
    
    stages {
        stage('Checkout') {
            steps {
                sh 'echo "Checkout started"'
                git branch: 'main', url: 'https://github.com/Nalla06/jenkins-cicd-argo-k8.git'
            }
        }
        
        stage('Build and Test') {
            steps {
                sh 'echo "Listing files in the current directory"'
                sh 'ls -ltr'  // List files to confirm we are in the right directory
                // Build the project and create a JAR file
                sh 'cd spring-boot-app && mvn clean package'
            }
        }
        
        stage('Static Code Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    // Run SonarQube analysis inside the 'spring-boot-app' folder
                    dir('spring-boot-app') {
                        sh "mvn sonar:sonar -Dsonar.host.url=${SONAR_URL} -Dsonar.login=${SONAR_AUTH_TOKEN}"
                    }
                }
            }
        }
        
        stage('Build and Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-cred', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        // Build and push Docker image
                        sh '''
                            cd spring-boot-app
                            docker build -t nalla06/spring-boot:${BUILD_NUMBER} .
                            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                            docker push nalla06/spring-boot:${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }
        
        stage('Update Deployment File') {
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    // Update deployment file and push changes to GitHub
                    sh '''
                        git config user.email "lakshmi.rajyam06@gmail.com"
                        git config user.name "Nalla06"
                        BUILD_NUMBER=${BUILD_NUMBER}
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" k8s-files/deployment.yml
                        git add k8s-files/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
